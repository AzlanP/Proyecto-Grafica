<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNuevaTarea.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>