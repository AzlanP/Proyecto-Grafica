<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNuevaTarea.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KgAAAABJRU5ErkJggg==
</value>
  </data>
</root>