<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBwAAAEAIACYDgAAFgAAACgAAAAgAAAAOAAAAAEAIAAAAAAAAA4AAMMOAADDDgAAAAAAAAAA
        AAAjHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyb/Ix8j/yMfIf8jHyP/Ix8h/yMfIv8jHyL/Ix8i/yMf
        Iv8jHyH/Ix8i/yMfIv8jHyL/Ix8i/yMfIv8jHyL/Ix8i/yMfIv8jHyH/Ix8i/yMfIv8jHyL/Ix8h/yMf
        Iv8jHyL/Ix8h/yMfI/8jHyL/Ix8i/yMfIv8jHyL/Ix8l/yEeHf8iHyr/JCAw/yIfJv8kIC//Ix8r/yMf
        Kv8iHyr/Ix8s/yMgL/8iHyj/Ix8s/yMgLP8jICz/IyAr/yIgLP8jICz/Ix8p/yMgLv8jHyz/Ix8s/yIf
        Kv8kIDD/Ix8q/yIfKf8kIDH/Ih8o/yMgLP8jICz/IyAs/yIfKf8hHh7/JiRe/zAsq/8uKpz/My/J/y0q
        mv8wLbD/MC21/zEtt/8wLK7/Liqc/zIuvv8wLKv/MCyu/zAsrv8wLK7/MCyt/y8sqv8yLr3/Liuf/zAs
        rP8wLK//MS62/y0ql/8xLbf/Mi67/y0qlf8zLsH/Lyyt/zAsrf8wLKz/MS2x/yYlZP8sKIj/KieB/yEg
        Of8oJWz/IiFC/yYjWv8mJGL/JiRj/yUjV/8lI1n/KSZ1/yUjVf8mI1v/JiNa/yYkXv8mI1f/JSNT/ycl
        af8jIkj/IyFJ/y4roP8pJnr/IiFD/yonfv8nJGL/IiA7/ygmcf8lJFr/JSNZ/yYjV/8nJWv/LiuZ/yso
        f/8nJWL/JiRY/ygmbf8jIkL/JCJG/yUjUf8lI1P/IiA2/yQiTP8mJFr/JCJI/yQjS/8kI0r/JSNP/yQi
        SP8kIkj/IyJG/yYjTP8gIDH/NDDU/yknev8mJFf/MCyq/yIhQP8kI0n/IyJI/yQjTP8kIkv/JCJH/yUk
        Wv8sKZD/KyiE/ygmdP8mJGb/MC2y/yUjWf8qJ4H/JiRg/yckZP8pJ3v/JSNd/y4qnP8mJF//JyVn/yYk
        Y/8rKIn/KCVp/yUjW/8uK6H/JyRl/yYkZP83Mur/MS26/yMiS/8qKIr/LCmR/yQhTv8uKpz/JyVr/yYk
        YP8mJGH/KyiM/y8qnP8oJnL/OTPz/zUw2v82MeL/NTDY/zcy6v8wLK3/MC2y/zgz7v82Md//NzHl/zYx
        3/82MeD/NzLn/zcx5P82MeD/NzHi/zgz7v82Md7/NzLl/zcy6P82MeP/NTHe/zgy6/84Mu3/NjHc/zcx
        5f83Muj/NzLo/zYx3/83Muf/KSZz/x8eHf8hHzP/KCV0/ywpl/8tKZr/KCVx/yIhQf8iIT7/JSNa/ygl
        cP8nJWv/JyVt/yclbv8jIkz/JyRl/yglcv8mI13/IiFB/ygmcv8lI1z/IyFF/yclbf8nJXL/JCJO/yMh
        Rv8nJXH/JyVt/yMhRv8iIUL/JyVv/yclbP8iIDz/Hx4i/y8ro/84M/L/OTT7/zk0+P84M/L/Lyun/xwc
        Df8vK53/OTT6/zcy6f83Muv/OTPz/yYkYf80L8r/OjX//y4rn/8jIUj/OjX//zAtsv8kIUn/ODPw/zk0
        /P8oJW3/JCJP/zk0+f84NPT/IiFA/yYkXf85NPj/ODP1/y0qk/8nJGX/OTT5/zcy8v8wLLP/Mi7F/zcy
        8v86Nf//JCJP/y0plv85NPz/NzLp/zcy6/85M/H/JiRm/zMvy/86NP//LSqf/yclbP86Nf//My/J/yUj
        W/84Mu3/OTT8/ygmcf8lIlT/OTP5/zgz8/8jIUn/Liuh/zkz+f84M/T/LCmP/ysoiP84M/X/OTT//yQj
        V/8pJnP/OTP8/zk09/8mJGX/LCmT/zkz+v84M/X/KyiL/yEgNP8hIDj/NDDV/zo0//8tKp3/KyiI/zo0
        //81MNj/JyRp/zcy6f85NP3/KCZx/yUiVP85M/r/NzPt/yYjX/81L9D/ODLw/zgz9v8sKY//KyiE/zcy
        6f83Muf/JSNU/y0qm/84M/j/OTT4/yYkYP8tKZP/OTP5/zkz9/8pJnX/HBsH/yAfLf81MNf/OjT//y4q
        oP8uK6T/OTT8/zYx5P8pJn3/NzLl/zk0/v8oJnH/JSJU/zk0/P82MuX/KyiM/zcy6/83Mur/ODP3/ywp
        j/8gHyv/Hx8p/yAfNP8uKp//ODPv/zYy6f85NPj/IiFB/y0ql/85M/j/OTP3/yknev8dHBL/IB8v/zUw
        1/85NP3/Lyuo/zItvP84M/b/NzLs/ywpk/82MeL/OTT+/ygmcf8lIlT/OTT8/zYx4/8yLsn/ODLv/zYy
        6f84M/f/LCmP/x4dFf8iIT7/My/J/zgz9/82Mer/OjT//zArqf8cHA//Liuh/zgz9/85M/f/KSd5/x0c
        D/8gHy7/NTDX/zkz+v8wLLb/NC/R/zgz8/84M/D/Lyut/zYx4P85NP//KCZx/yUiVP85NPr/NzLp/zcy
        7P83Mu3/NzLr/zgz9/8sKY//IiE7/zcx4f84M/f/NzLv/zgz8P8sKIz/Hx0e/x0cEf8uK6H/ODP2/zkz
        9/8pJ3n/HRwP/yAfLv81MNj/ODP2/zIux/82MeL/NTDc/zcy6f8yLsj/NjHh/zk0//8oJnH/JSJU/zkz
        +v83Mun/NzLu/zUx4f82MeL/OTP5/ywpj/8rKIr/ODP3/zcy7P81MNP/JSNW/x0dHf8gHyz/HR0W/y4q
        oP84M/b/OTP3/yknef8dHA//IB8u/zUw2f84MvL/NTHf/zgz8v8uK6r/NTDX/zYx5/82MeX/OTT9/ygm
        cf8lIlT/OTP6/zYx6P84M/X/Lyup/zQv0v85NPz/LCmP/y4rnv84M/P/OTP5/yQiU/8rKIX/NzLp/zUx
        2P8gHzP/LSqa/zkz+P85M/f/KSd5/x0cD/8gHy7/NTHZ/zcy8P83Mur/OTT4/yknfv8zLsX/ODP2/zYy
        6P85NPz/KCZx/yUiVP85M/r/NjLp/zgz7/8nJWn/NTDV/zkz/P8sKY//LSqV/zgz9f84M/H/KSZ6/zEt
        uv84M/r/ODPv/yAfMf8tKpj/OTP1/zkz8/8pJ3j/HRwQ/yAfLv81MNb/ODLt/zYy5v85M/P/JSNX/zEt
        s/84M/T/NjHk/zk0+f8oJnD/JCJT/zkz9v83Mu7/NC/P/yIgO/82Mdv/OTP3/ywpjf8lI1P/ODPx/zkz
        +f84NPf/ODP0/zk0//8zL8f/HRwT/zArqP87NP//OzT//yonf/8dHA7/IB8v/zcy5f86M/3/OTP5/zk0
        +v8hIDj/Lyyp/zs1//84MvP/OjX//ygmdv8lI1b/OzT//zo0//8tKpn/Hx4o/zgz7/86Nf//LSqW/x4d
        GP8mJFv/MS24/zMvy/8zLsf/LSqa/yIgOP8dHBP/KiZ1/zAsq/8wLKz/JiRa/x4dFf8gHyn/LiqZ/y8r
        p/8vK6b/Lyue/x4eIv8nJmr/MCyv/y4qof8wLLD/JSNV/yMhQf8wLKz/Lyys/yQiSv8fHiX/Liuf/zAs
        rf8oJWj/Ih8l/yEeGf8hHhv/Ih8l/yIeIv8gHRb/Ih4e/yIfJf8hHhz/IB0X/yAdF/8iHh7/Ih8k/yIf
        Iv8hHhn/IB4X/yAdF/8hHRj/Ih8j/yEeHf8hHRf/IB4Y/yAdFv8iHh//Ih8g/yAdF/8gHRb/Ih4f/yIf
        I/8gHhj/IR0W/yEeHf8jHyT/JB8m/yMfJv8jHyP/Ix8k/yQfJ/8jHyX/Ix8k/yMfJv8kHyf/JB8n/yMf
        Jf8jHyT/Ix8k/yQfJ/8jHyf/JB8n/yQfJ/8jHyT/Ix8m/yMfJ/8kHyf/JB8n/yMfJf8jHyX/JB8n/yQf
        J/8jHyX/Ix8k/yQfJ/8kHyf/Ix8m/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMf
        JP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/yMfJP8jHyT/Ix8k/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>